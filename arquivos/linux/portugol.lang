<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: Luiz Fernando Noschang <noschang@univali.br>
 Copyright (C) 2013 Luiz Fernando Noschang <noschang@univali.br>

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.

-->
<language id="portugol20" _name="Portugol 2.0" version="2.0" _section="Sources">
  <metadata>
    <property name="mimetypes">application/x-portugol</property>
    <property name="globs">*.por</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment" _name="Comment" map-to="def:comment"/>
    <style id="error" _name="Error" map-to="def:error"/>
    <style id="escaped-character" _name="Escaped Character" map-to="def:special-char"/>
    <style id="string" _name="String" map-to="def:string"/>
    <style id="char" _name="Character" map-to="def:character"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="boolean" _name="Boolean value" map-to="def:boolean"/>
    <style id="number" _name="Number" map-to="def:decimal"/>
    <style id="type" _name="Data Type" map-to="def:type"/>
    <style id="identifier" _name="Identifier" map-to="def:identifier"/>
    <style id="constant" _name="Constant" map-to="def:identifier"/>
    <style id="operators" _name="Operators" map-to="def:special-char"/>
  </styles>

  <definitions>

    <define-regex id="escaped-character" extended="true">
      \\(               # leading backslash
      [\\\"\'nrbtf] |   # escaped character
      [0-9]{1,3}    |   # latin encoded char
      u[0-9]{1,4}       # unicode char
      )
    </define-regex>

    <context id="string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
      <start>"</start>
      <end>"</end>
      <include>
        <context id="escaped-character" style-ref="escaped-character">
          <match>\%{escaped-character}</match>
        </context>
      </include>
    </context>

   <context id="char" style-ref="char">
     <match>'(\%{escaped-character}|.)'</match>
   </context>

    <context id="line-comment" style-ref="comment" end-at-line-end="true" class="comment" class-disabled="no-spell-check">
      <start>//</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="block-comment" style-ref="comment" class="comment" class-disabled="no-spell-check">
      <start>/\*</start>
      <end>\*/</end>
      <include>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="close-comment-outside-comment" style-ref="error">
      <match>\*/(?!\*)</match>
    </context>

    <context id="primitive-types" style-ref="type">
      <keyword>inteiro</keyword>
      <keyword>real</keyword>
      <keyword>cadeia</keyword>
      <keyword>caracter</keyword>
      <keyword>logico</keyword>
      <keyword>vazio</keyword>
    </context>

    <context id="flow" style-ref="keyword">
      <keyword>const</keyword>
      <keyword>nao</keyword>
      <keyword>e</keyword>
      <keyword>ou</keyword>
      <keyword>senao</keyword>
      <keyword>se</keyword>
      <keyword>funcao</keyword>
      <keyword>pare</keyword>
      <keyword>caso</keyword>
      <keyword>continue</keyword>
      <keyword>contrario</keyword>
      <keyword>faca</keyword>
      <keyword>programa</keyword>
      <keyword>para</keyword>
      <keyword>inclua</keyword>
      <keyword>biblioteca</keyword>
      <keyword>retorne</keyword>
      <keyword>escolha</keyword>
      <keyword>enquanto</keyword>
      <keyword>escreva</keyword>
      <keyword>leia</keyword>
      <keyword>limpa</keyword>
    </context>

    <context id="boolean" style-ref="boolean">
      <keyword>verdadeiro</keyword>
      <keyword>falso</keyword>
    </context>

    <context id="numeric" style-ref="number">
      <match extended="true">
        (\b([0-9]+|0[xX][0-9a-fA-F]+)[Ll]?\b|
         \b(([0-9]+[Ee][-]?[0-9]+|
            ([0-9]*\.[0-9]+|[0-9]+\.)([Ee][-]?[0-9]+)?)[fFdD]?|
            [0-9]+[FfDd])) |

	0[bB][0-1]+
      </match>
    </context>

    <context id="operators" style-ref="operators">
       <match>[+=\-*/&gt;&lt;%&amp;|!.,]</match>
    </context>

    <context id="constant" style-ref="constant">
      <match>[A-Z_][A-Z0-9_]*</match>
    </context>

    <context id="identifier" style-ref="identifier">
       <match>[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>



    <context id="portugol20" class="no-spell-check">
      <include>
        <context ref="string"/>
        <context ref="char"/>
        <context ref="line-comment"/>
        <context ref="block-comment"/>
        <context ref="close-comment-outside-comment"/>
	<context ref="operators"/>
        <context ref="boolean"/>
        <context ref="numeric"/>
        <context ref="primitive-types"/>
        <context ref="flow"/>
      </include>
    </context>

  </definitions>
</language>
